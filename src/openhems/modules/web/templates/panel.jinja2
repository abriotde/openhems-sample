<!DOCTYPE html>
<html lang="en">
<head>
    <title>OpenHEMS</title>
    <link rel="stylesheet" href="{{request.static_url('openhems.modules.web:css/openhems.css')}}">
		<link rel="shortcut icon" href="{{request.static_url('openhems.modules.web:img/favicon.ico')}}" />
</head>
<body>
<nav class="menu">
  <ul>
    <li><a href="/params">Parameters</a></li>
    <li><a href="https://github.com/abriotde/openhems-sample/tree/main">More</a></li>
  </ul>
</nav>
<div class="page">
	<h1>Devices program</h1>
	<div id="network"></div>
	<input id="valid" type="image" src="{{request.static_url('openhems.modules.web:img/correct_32.ico')}}" onclick="onSave()" ></input>
</div>
<script>
var nodes = {{ nodes|tojson }};
var network;
function setDevicesProgramm(nodes) {
	network.innerHTML="";
	var i = 0;
	console.log("nodes : ",nodes);
	for (const [nodeid, node] of Object.entries(nodes)) {
		console.log("node : ",nodeid," => ",node);
		let nodeDiv = document.createElement("div");
		var id ="node"+nodeid;
		nodeDiv.id = "div"+id;
		nodeDiv.classList.add("device");
		duration = Math.floor(node.duration/60); // Keep only minutes, forget seconds.
		if (duration=="0") {
			checked	= "";
			display = " style=\"display:none\"";
		} else {
			checked	= " checked ";
			display = ""
			min = duration%60;
			hour = (duration-min)/60;
			duration=(""+hour).padStart(2,'0')+":"+(""+min).padStart(2,'0');
			// console.log("Duration:", duration)
		}
		nodeDiv.innerHTML='<div class="col-25"><label for="'+id+'"> '+node.name+'</label>'
			+'<input type="checkbox" name="'+id+'" id="'+id+'" " onclick="showMe(\''+id+'_conf\', this)"'+ checked+'>'
			+'</div><div class="col-75">'
			+'<span id="'+id+'_conf" '+display+'>'
			+	'<span class="col-25"><img title="Duration (hr:min)" src="{{request.static_url('openhems.modules.web:img/hourglass.svg')}}" /></span>'
			+   '<span class="col-25"><input type="time" id="'+id+'_duration" name="'+id+'_duration" value="'+duration+'" onchange="changeSthg()"></span>'
			+	'<span class="col-25"><img title="Timeout (Next hr:min)" src="{{request.static_url('openhems.modules.web:img/alarm.svg')}}" /></span>'
			+   '<span class="col-25"><input type="time" id="'+id+'_timeout" name="'+id+'_timeout" value="'+node.timeout+'" onchange="changeSthg()"></span>'
			+'</span></div>';
		network.appendChild(nodeDiv);
		i++;
	}
}
function hideMenu() {
	var elems = document.getElementsByClassName("menu");
	for (let elem of elems) {
		elem.style.display = "none";
	}
	elems = document.getElementsByTagName("h1");
	for (let elem of elems) {
		elem.style.display = "none";
	}
}
function initMainPage() {
	network = document.getElementById("network");
	const searchParams = new URLSearchParams(window.location.search);
	if (searchParams.has("n") && searchParams.get("n")=="1") {
		hideMenu();
	}
	setDevicesProgramm(nodes);
}
function changeSthg() {
	// console.log("changeSthg()");
	document.getElementById("valid").src="{{request.static_url('openhems.modules.web:img/save_32.ico')}}";
}
function onSave() {
	console.log("onSave()");
	nodes = {};
	for (const divnode of network.children) {
		// console.log(divnode);
		const id = divnode.id.substring(7);
		// console.log("id:",id);
		const col0 = divnode.children[0];
		const col1 = divnode.children[1];
		const label = col0.children[0].innerHTML;
		// console.log("label:",label);
		const checkbox = col0.children[1];
		// console.log("checkbox:",checkbox);
		const nodeid = "node"+id;
		if (checkbox.checked) {
			durationVal = document.getElementById(nodeid+"_duration").value;
			// console.log("durationVal:",durationVal);
			if (durationVal=="") duration = 0;
			else {
				const vals = durationVal.split(":");
				duration = parseInt(vals[0])*60 + parseInt(vals[1]);
			}
			timeout = document.getElementById(nodeid+"_timeout").value;
			// console.log("timeout:",timeout);
			if (timeout=="") timeout = 0;
		} else {
			duration = 0;
			timeout = 0;
		}
		nodes[id] = {name: label, duration: duration*60, timeout: timeout} // Convert minutes to seconds
	}
	console.log("onSave() : nodes=",nodes);
	var xhr = new XMLHttpRequest();
	var url = "/states";
	xhr.open("POST", url, true);
	// xhr.setRequestHeader("Content-Type", "application/json");
	// xhr.setRequestHeader("Content-Type", "multipart/form-data");
	xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
	xhr.onreadystatechange = function () {
    	if (xhr.readyState === 4 && xhr.status === 200) {
        	var json = JSON.parse(xhr.responseText);
        	console.log("Response : ",json);
        	setDevicesProgramm(json);
        	document.getElementById("valid").src="{{request.static_url('openhems.modules.web:img/correct_32.ico')}}";
    	}
	};
	xhr.send(JSON.stringify(nodes));
}
function showMe (it, box) {
	var vis = (box.checked) ? "inline" : "none";
	// console.log("ShowMMe(",vis,")");
	document.getElementById(it).style.display = vis;
	changeSthg();
}
initMainPage();
</script>
</body>
</html>
