<!DOCTYPE html>
<html lang="en">
<head>
    <title>OpenHEMS</title>	
    <style>/* The switch - the box around the slider */
		.switch {
		  position: relative;
		  display: inline-block;
		  width: 60px;
		  height: 34px;
		}

		/* Hide default HTML checkbox */
		.switch input {
		  opacity: 0;
		  width: 0;
		  height: 0;
		}

		/* The slider */
		.slider {
		  position: absolute;
		  cursor: pointer;
		  top: 0;
		  left: 0;
		  right: 0;
		  bottom: 0;
		  background-color: #ccc;
		  -webkit-transition: .4s;
		  transition: .4s;
		}

		.slider:before {
		  position: absolute;
		  content: "";
		  height: 26px;
		  width: 26px;
		  left: 4px;
		  bottom: 4px;
		  background-color: white;
		  -webkit-transition: .4s;
		  transition: .4s;
		}

		input:checked + .slider {
		  background-color: #2196F3;
		}

		input:focus + .slider {
		  box-shadow: 0 0 1px #2196F3;
		}

		input:checked + .slider:before {
		  -webkit-transform: translateX(26px);
		  -ms-transform: translateX(26px);
		  transform: translateX(26px);
		}

		/* Rounded sliders */
		.slider.round {
		  border-radius: 34px;
		}

		.slider.round:before {
		  border-radius: 50%;
		}
		nav{
			width: 100%;
			margin: 0px auto 0px auto;
			background-color: white;
			position: sticky;
			top: 0px;
			border: thick solid grey;
			background: content-box radial-gradient(grey, white);
		}
		nav ul{
			margin: 0px 0px 0px 0px;
			list-style-type: none;
			border: 1rem;
		}
		nav li{
			float: left;
			width: 25%;
			text-align: center;
		}
		nav ul::after{
			content: "";
			display: table;
			clear: both;
		}
		nav a{
			display: block;
			text-decoration: none;
			color: black;
			border-bottom: 2px solid transparent;
			padding: 10px 0px;
		}
		nav a:hover{
			color: white;
			border-bottom: 2px solid white;
		}
		.page{
			margin: 0px 20px;
			height: 1500px;
		}
		.negativValue {
			color:red;
			background: #e6f3ff;
		}
	</style>
</head>
<body>
<nav class="menu">
  <ul>
    <li><a href="/params">Parameters</a></li>
    <li><a href="https://github.com/abriotde/openhems-sample/tree/main">More</a></li>
  </ul>
</nav>
<div class="page">
	<h1>Devices program</h1>
	<div id="network"></div>
	<input id="valid" type="image" src="{{request.static_url('openhems.modules.web:../../../../img/correct_32.ico')}}" onclick="onSave()" ></input>
</div>
<script>
var nodes = {{ nodes|tojson }};
var network;
function setDevicesProgramm(nodes) {
	network.innerHTML="";
	var i = 0;
	// console.log("nodes : ",nodes);
	for (const [nodeid, node] of Object.entries(nodes)) {
		// console.log("node : ",nodeid," => ",node);
		let nodeDiv = document.createElement("div");
		var id ="node"+nodeid;
		nodeDiv.id = "div"+id;
		duration = Math.floor(node.duration/60); // Keep only minutes, forget seconds.
		if (duration<=0) {
			checked	= "";
			display = " style=\"display:none\"";
		} else {
			checked	= " checked ";
			display = ""
			min = duration%60;
			hour = (duration-min)/60;
			duration=(""+hour).padStart(2,'0')+":"+(""+min).padStart(2,'0');
			// console.log("Duration:", duration)
		}
		nodeDiv.innerHTML='<label for="'+id+'"> '+node.name+'</label>:'
			+'<label class="switch">'
			+  '<input type="checkbox" name="'+id+'" id="'+id+'" " onclick="showMe(\''+id+'_conf\', this)"'+ checked+'>'
			+  '<span class="slider round"></span>'
			+'</label>'
			+'<span id="'+id+'_conf" '+display+'>'

			+'<span id="'+id+'_duration_space" '+((node.duration<0)?' class="negativValue" ':'')+'>'
			+'<label for="'+id+'_duration">Duration (hr:min):</label>'
			+'<input type="time" id="'+id+'_duration" name="'+id+'_duration" value="'+duration+'" onchange="changeSthg(\""'+id+'_duration"\")">'
			+'</span>'

			+'<span id="'+id+'_energy_space" '+((node.energy<0)?' class="negativValue" ':'')+'>'
			+'<label for="'+id+'_energy">Energy (Kwh):</label>'
			+'<input type="number" id="'+id+'_energy" name="'+id+'_energy" value="'+node.energy+'" onchange="changeSthg(\"'+id+'_energy\")">'
			+'</span>'

			+'<span id="'+id+'_timeout_space" '+((node.timeout<0)?' class="negativValue" ':'')+'>'
			+'<label for="'+id+'_timeout">Timeout (Next hr:min):</label>'
			+'<input type="time" id="'+id+'_timeout" name="'+id+'_timeout" value="'+node.timeout+'" onchange="changeSthg(\"'+id+'_timeout\")">'
			+'</span>'
			+'</span>';
		network.appendChild(nodeDiv);
		i++;
	}
}
function hideMenu() {
	var elems = document.getElementsByClassName("menu");
	for (let elem of elems) {
		elem.style.display = "none";
	}
	elems = document.getElementsByTagName("h1");
	for (let elem of elems) {
		elem.style.display = "none";
	}
}
function initMainPage() {
	network = document.getElementById("network");
	const searchParams = new URLSearchParams(window.location.search);
	if (searchParams.has("n") && searchParams.get("n")=="1") {
		hideMenu();
	}
	setDevicesProgramm(nodes);
}
function changeSthg(id) {
	// console.log("changeSthg()");
	document.getElementById("valid")
		.src="{{request.static_url('openhems.modules.web:../../../../img/save_32.ico')}}";
	if (id) {
		var elem = document.getElementById(id+"_space");
		if (elem) elem.classList.remove("negativValue");;
	}
}
function onSave() {
	// console.log("onSave()");
	nodes = {};
	for (const divnode of network.children) {
		// console.log(divnode);
		const id = divnode.id.substring(7);
		// console.log("id:",id);
		const label = divnode.children[0].innerHTML;
		// console.log("label:",label);
		const checkbox = divnode.children[1].children[0];
		// console.log("checkbox:",checkbox);
		if (checkbox.checked) {
			durationVal = divnode.children[2].children[0].value;
			if (durationVal=="") duration = 0;
			else {
				const vals = durationVal.split(":");
				duration = parseInt(vals[0])*60 + parseInt(vals[1]);
			}
			timeout = divnode.children[2].children[1].value;
			if (timeout=="") timeout = 0;
			energy = divnode.children[2].children[1].value;
		} else {
			duration = 0;
			timeout = 0;
			energy = 0;
		}
		nodes[id] = {
			name: label,
			duration: duration*60, // Convert minutes to seconds
			energy: energy*1000, // Convert Kwh to Wh
			timeout: timeout
		}
	}
	console.log("onSave() : nodes=",nodes);
	var xhr = new XMLHttpRequest();
	var url = "/states";
	xhr.open("POST", url, true);
	// xhr.setRequestHeader("Content-Type", "application/json");
	// xhr.setRequestHeader("Content-Type", "multipart/form-data");
	xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
	xhr.onreadystatechange = function () {
    	if (xhr.readyState === 4 && xhr.status === 200) {
        	var json = JSON.parse(xhr.responseText);
        	console.log("Response : ",json);
        	setDevicesProgramm(json);
        	document.getElementById("valid").src="{{request.static_url('openhems.modules.web:../../../../img/correct_32.ico')}}";
    	}
	};
	xhr.send(JSON.stringify(nodes));
}
function showMe (it, box) {
	var vis = (box.checked) ? "inline" : "none";
	// console.log("ShowMMe(",vis,")");
	document.getElementById(it).style.display = vis;
	changeSthg();
}
initMainPage();
</script>
</body>
</html>
