<!DOCTYPE html>
<html lang="en">
<head>
    <title>OpenHEMS</title>	
    <style>/* The switch - the box around the slider */
		.switch {
		  position: relative;
		  display: inline-block;
		  width: 60px;
		  height: 34px;
		}

		/* Hide default HTML checkbox */
		.switch input {
		  opacity: 0;
		  width: 0;
		  height: 0;
		}

		/* The slider */
		.slider {
		  position: absolute;
		  cursor: pointer;
		  top: 0;
		  left: 0;
		  right: 0;
		  bottom: 0;
		  background-color: #ccc;
		  -webkit-transition: .4s;
		  transition: .4s;
		}

		.slider:before {
		  position: absolute;
		  content: "";
		  height: 26px;
		  width: 26px;
		  left: 4px;
		  bottom: 4px;
		  background-color: white;
		  -webkit-transition: .4s;
		  transition: .4s;
		}

		input:checked + .slider {
		  background-color: #2196F3;
		}

		input:focus + .slider {
		  box-shadow: 0 0 1px #2196F3;
		}

		input:checked + .slider:before {
		  -webkit-transform: translateX(26px);
		  -ms-transform: translateX(26px);
		  transform: translateX(26px);
		}

		/* Rounded sliders */
		.slider.round {
		  border-radius: 34px;
		}

		.slider.round:before {
		  border-radius: 50%;
		}
		nav{
			width: 100%;
			margin: 0px auto 0px auto;
			background-color: white;
			position: sticky;
			top: 0px;
			border: thick solid grey;
			background: content-box radial-gradient(grey, white);
		}
		nav ul{
			margin: 0px 0px 0px 0px;
			list-style-type: none;
			border: 1rem;
		}
		nav li{
			float: left;
			width: 25%;
			text-align: center;
		}
		nav ul::after{
			content: "";
			display: table;
			clear: both;
		}
		nav a{
			display: block;
			text-decoration: none;
			color: black;
			border-bottom: 2px solid transparent;
			padding: 10px 0px;
		}
		nav a:hover{
			color: white;
			border-bottom: 2px solid white;
		}
		.page{
		  margin: 0px 20px;
		  height: 1500px;
		}
	</style>
</head>
<body>
<nav class="menu">
  <ul>
    <li><a href="/">Devices program</a></li>
    <li><a href="https://github.com/abriotde/openhems-sample/tree/main">More</a></li>
  </ul>
</nav>
<div class="page">
	<h1>Parameters</h1>
	<div><img id="waitImg" src="{{request.static_url('modules.web:../../../img/wait.gif')}}" style="display:none"></img><div>
	<div>VPN is <b id="vpnStatus">{{ vpn }}</b>.<button id="vpnButton"></button></div>
</div>
<script>
const vpn = {{ vpn|tojson }};
const vpnButton = document.getElementById("vpnButton");
const vpnStatus = document.getElementById("vpnStatus");
const waitImg = document.getElementById("waitImg");
if (vpn=="up") {
	connectedVPN(true);
} else {
	connectedVPN(false);
}
/**
	Function to initiate page to the state of the VPN.
	@param : bool : True if VPN is connected.
*/
function connectedVPN(connect) {
	url = "/vpn?connect="+(connect?"false":"true");
	vpnButton.onclick = function () {
		waitImg.style.display = "inline";
		vpnButton.style.display = "none";
		fetch(url, { method: 'GET' })
			.then(Result => Result.json())
			.then(retVal => {
				console.log('response :  '+retVal);
				connectedVPN(retVal.connected);
				waitImg.style.display = "none";
				vpnButton.style.display = "inline";
			})
			.catch(errorMsg => { console.log(errorMsg); }); 
	}
	vpnButton.innerHTML = connect?"Disconnect":"Connect";
	vpnStatus.innerHTML = connect?"up":"down";
}
</script>
</body>
</html>
